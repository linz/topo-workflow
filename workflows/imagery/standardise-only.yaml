---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: imagery-standardise-only-v0.2.0-34
spec:
  parallelism: 20
  nodeSelector:
    karpenter.sh/capacity-type: "spot"
  entrypoint: main
  arguments:
    parameters:
      - name: source
        value: "s3://linz-imagery-staging/test/sample/"
      - name: filter
        value: ".tiff?$"
      - name: group
        value: 10
  templates:
    - name: main
      dag:
        tasks:
          - name: aws-list
            template: aws-list
            arguments:
              parameters:
                - name: source
                  value: "{{workflow.parameters.source}}"
                - name: filter
                  value: "{{workflow.parameters.filter}}"
          - name: standardise
            template: standardise
            arguments:
              parameters:
                - name: file
                  value: "{{item}}"
            depends: "aws-list"
            withParam: "{{tasks.aws-list.outputs.parameters.files}}"
    - name: aws-list
      inputs:
        parameters:
          - name: source
          - name: filter
      container:
        image: ghcr.io/linz/argo-tasks:v1.0.0-8-g53a2c88
        command: [node, /app/index.cjs]
        env:
          - name: AWS_ROLE_CONFIG_PATH
            value: s3://linz-bucket-config/config-v2.json
        args:
          [
            "list",
            "--verbose",
            "--filter",
            "{{inputs.parameters.filter}}",
            "--group",
            "{{workflow.parameters.group}}",
            "--output",
            "/tmp/file_list.json",
            "{{inputs.parameters.source}}",
          ]
      outputs:
        parameters:
          - name: files
            valueFrom:
              path: /tmp/file_list.json
    - name: standardise
      retryStrategy:
        limit: "2"
      nodeSelector:
        karpenter.sh/capacity-type: "spot"
      inputs:
        parameters:
          - name: file
      container:
        image: ghcr.io/linz/topo-imagery:v0.2.0-34-g6527603
        resources:
          requests:
            memory: 3.9Gi
            cpu: 2000m
            ephemeral-storage: 3Gi
        volumeMounts:
          - name: ephemeral
            mountPath: "/tmp"
        command:
          - python
          - "/app/scripts/standardising.py"
        args:
          - "--source"
          - "{{inputs.parameters.file}}"
      outputs:
        artifacts:
          - name: standardised_tiffs
            path: /tmp/
            archive:
              none: {}
  volumes:
    - name: ephemeral
      emptyDir: {}
