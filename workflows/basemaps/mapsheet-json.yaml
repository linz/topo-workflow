apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: basemaps-create-mapsheet-json
  namespace: argo
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: version-argo-tasks
        value: "v2"
      - name: version-basemaps-cli
        value: "v6"
      - name: layer
        value: "104687"
      - name: config
        value: "s3://linz-basemaps/config/config-latest.json.gz"
      - name: include
        value: ""
      - name: exclude
        value: "nz_satellite"
  templateDefaults:
    container:
      imagePullPolicy: Always
  templates:
    - name: main
      dag:
        tasks:
          - name: fetch-layer
            template: fetch-layer
            arguments:
              parameters:
                - name: layer
                  value: "{{workflow.parameters.layer}}"
          - name: transform
            template: transform
            arguments:
              artifacts:
                - name: geopackage
                  from: "{{tasks.fetch-layer.outputs.artifacts.geopackage}}"
            depends: "fetch-layer"
          - name: create-mapsheet
            template: create-mapsheet
            arguments:
              artifacts:
                - name: flatGeobuf
                  from: "{{tasks.transform.outputs.artifacts.flatGeobuf}}"
            depends: "transform"

    - name: fetch-layer
      inputs:
        parameters:
          - name: layer
      container:
        image: ghcr.io/linz/argo-tasks:{{=sprig.trim(workflow.parameters['version-argo-tasks'])}}
        command: [node, index.js]
        env:
          - name: AWS_ROLE_CONFIG_PATH
            value: s3://linz-bucket-config/config.json
        args:
          [
            "lds-fetch-layer",
            "{{=sprig.trim(inputs.parameters.layer)}}",
            "--target",
            "/tmp/lds-layer",
          ]
      outputs:
        artifacts:
          - name: geopackage
            path: /tmp/lds-layer/

    - name: transform
      inputs:
        artifacts:
          - name: geopackage
            path: /tmp/
      container:
        image: osgeo/gdal:alpine-small-3.6.1
        imagePullPolicy: IfNotPresent
        command: [sh]
        args: ["-c", "ogr2ogr -f FlatGeobuf tmp/flatGeobuf.fgb tmp/*.gpkg"]
      outputs:
        artifacts:
          - name: flatGeobuf
            path: /tmp/flatGeobuf.fgb

    - name: create-mapsheet
      inputs:
        artifacts:
          - name: flatGeobuf
            path: /tmp/flatGeobuf.fgb
      container:
        image: ghcr.io/linz/basemaps/cli:{{=sprig.trim(workflow.parameters['version-basemaps-cli'])}}
        command: [node, index.cjs]
        env:
          - name: AWS_ROLE_CONFIG_PATH
            value: s3://linz-bucket-config/config.json
        args:
          [
            "-V",
            "create-mapsheet",
            "--path",
            "/tmp/flatGeobuf.fgb",
            "--config",
            "{{=sprig.trim(workflow.parameters.config)}}",
            "--output",
            "/tmp/mapsheet.json",
            "--include",
            "{{=sprig.trim(workflow.parameters.include)}}",
            "--exclude",
            "{{=sprig.trim(workflow.parameters.exclude)}}",
          ]
      outputs:
        artifacts:
          - name: mapsheet
            path: /tmp/mapsheet.json
            archive: {}
  volumes:
    - name: ephemeral
      emptyDir: {}
