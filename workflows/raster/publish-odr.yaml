# yaml-language-server: $schema=https://raw.githubusercontent.com/argoproj/argo-workflows/v3.4.13/api/jsonschema/schema.json

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: publish-odr
  namespace: argo
  labels:
    linz.govt.nz/category: raster
    linz.govt.nz/data-type: raster
spec:
  parallelism: 50
  nodeSelector:
    karpenter.sh/capacity-type: 'spot'
  entrypoint: main
  synchronization:
    semaphore:
      configMapKeyRef:
        name: semaphores
        key: bulkcopy
  workflowMetadata:
    labelsFrom:
      linz.govt.nz/ticket:
        expression: workflow.parameters.ticket
      linz.govt.nz/region:
        expression: workflow.parameters.region
  arguments:
    parameters:
      - name: version_argo_tasks
        value: 'v2'
      - name: ticket
        description: Ticket ID e.g. 'AIP-55'
        value: ''
      - name: region
        description: Region of the dataset
        value: 'new-zealand'
        enum:
          - 'antarctica'
          - 'auckland'
          - 'bay-of-plenty'
          - 'canterbury'
          - 'gisborne'
          - 'global'
          - 'hawkes-bay'
          - 'manawatu-whanganui'
          - 'marlborough'
          - 'nelson'
          - 'new-zealand'
          - 'northland'
          - 'otago'
          - 'pacific-islands'
          - 'southland'
          - 'taranaki'
          - 'tasman'
          - 'waikato'
          - 'wellington'
          - 'west-coast'
      - name: source
        value: 's3://linz-imagery-staging/test/sample/'
      - name: target
        value: 's3://linz-imagery-staging/test/sample_target/'
      - name: include
        value: '.tiff?$|.json$|.tfw$'
      - name: copy_option
        value: '--no-clobber'
        enum:
          - '--no-clobber'
          - '--force'
          - '--force-no-clobber'
      - name: group
        value: '1000'
      - name: group_size
        value: '100Gi'
      - name: transform
        value: 'f'
  templateDefaults:
    container:
      imagePullPolicy: Always
      image: ''
  templates:
    - name: main
      inputs:
        parameters:
          - name: source
          - name: include
          - name: group
          - name: group_size
      dag:
        tasks:
          - name: lint-inputs
            templateRef:
              name: tpl-at-lint-inputs
              template: main
            arguments:
              parameters:
                - name: version
                  value: '{{workflow.parameters.version_argo_tasks}}'
                - name: path
                  value: '{{workflow.parameters.target}}'
            when: "{{=sprig.regexMatch('s3://nz-imagery/', workflow.parameters.target)}}"

          - name: create-manifest-github
            templateRef:
              name: tpl-create-manifest
              template: main
            arguments:
              parameters:
                - name: source
                  value: '{{inputs.parameters.source}}'
                - name: target
                  value: '{{workflow.parameters.target}}'
                - name: include
                  value: '{{inputs.parameters.include}}'
                - name: exclude
                  value: 'collection.json$'
                - name: group
                  value: '{{inputs.parameters.group}}'
                - name: group_size
                  value: '{{inputs.parameters.group_size}}'
                - name: version_argo_tasks
                  value: '{{workflow.parameters.version_argo_tasks}}'
            when: "{{=sprig.regexMatch('s3://nz-imagery/', workflow.parameters.target)}}"
            depends: 'lint-inputs'

          - name: create-manifest
            templateRef:
              name: tpl-create-manifest
              template: main
            arguments:
              parameters:
                - name: source
                  value: '{{inputs.parameters.source}}'
                - name: target
                  value: '{{workflow.parameters.target}}'
                - name: include
                  value: '{{inputs.parameters.include}}'
                - name: exclude
                  value: ''
                - name: group
                  value: '{{inputs.parameters.group}}'
                - name: group_size
                  value: '{{inputs.parameters.group_size}}'
                - name: version_argo_tasks
                  value: '{{workflow.parameters.version_argo_tasks}}'
            depends: 'create-manifest-github.Skipped && lint-inputs'

          - name: copy-with-github
            templateRef:
              name: tpl-copy
              template: main
            arguments:
              parameters:
                - name: copy_option
                  value: '{{workflow.parameters.copy_option}}'
                - name: file
                  value: '{{item}}'
                - name: version_argo_tasks
                  value: '{{workflow.parameters.version_argo_tasks}}'
                - name: aws-role-config-path
                  value: 's3://linz-bucket-config/config-write.open-data-registry.json,s3://linz-bucket-config/config.json'
            depends: 'create-manifest-github.Succeeded'
            withParam: '{{tasks.create-manifest-github.outputs.parameters.files}}'

          - name: copy
            templateRef:
              name: tpl-copy
              template: main
            arguments:
              parameters:
                - name: copy_option
                  value: '{{workflow.parameters.copy_option}}'
                - name: file
                  value: '{{item}}'
                - name: version_argo_tasks
                  value: '{{workflow.parameters.version_argo_tasks}}'
                - name: aws-role-config-path
                  value: 's3://linz-bucket-config/config-write.open-data-registry.json'
            depends: 'create-manifest'
            withParam: '{{tasks.create-manifest.outputs.parameters.files}}'

          - name: push-to-github
            templateRef:
              name: tpl-push-to-github
              template: main
            arguments:
              parameters:
                - name: source
                  value: '{{inputs.parameters.source}}'
                - name: target
                  value: '{{workflow.parameters.target}}'
                - name: version_argo_tasks
                  value: '{{workflow.parameters.version_argo_tasks}}'
                - name: repository
                  value: 'imagery'
            depends: 'copy-with-github'
