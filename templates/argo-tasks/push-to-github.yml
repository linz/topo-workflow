apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  # TODO Template for Pushing to Github
  # See TODO Github link
  name: tpl-push-to-github
spec:
  templateDefaults:
    container:
      imagePullPolicy: Always
  entrypoint: main
  templates:
    - name: main
      retryStrategy:
        limit: "2"
      inputs:
        parameters:
          - name: source
            description: location of data to publish

          - name: target
            description: location to publish data to

          - name: version-argo-tasks
            description: version of argo-tasks to use
            default: "v2"

          - name: repo
            description: TODO
            default: "elevation"
            enum:
              - "elevation"

      container:
        image: "019359803926.dkr.ecr.ap-southeast-2.amazonaws.com/eks:argo-tasks-{{=sprig.trim(inputs.parameters['version-argo-tasks'])}}"
        env:
          - name: AWS_ROLE_CONFIG_PATH
            value: s3://linz-bucket-config/config.json
          - name: GIT_AUTHOR_NAME
            value: "{{=sprig.regexFind(inputs.parameters.repo, inputs.parameters.target)}}[bot]"
          - name: GIT_AUTHOR_EMAIL
            value: "{{=sprig.regexFind(inputs.parameters.repo, inputs.parameters.target)}}@linz.govt.nz"
        volumeMounts:
          - name: secret-volume
            mountPath: "/root/.ssh/"
        command: [node, /app/index.js]
        args:
          [
            "stac",
            "github-import",
            "--source",
            "{{=sprig.trim(inputs.parameters.source)}}",
            "--target",
            "{{=sprig.trim(inputs.parameters.target)}}",
            "--repo-name",
            "linz/{{=sprig.regexFind(inputs.parameters.repo, inputs.parameters.target)}}",
          ]
  volumes:
    - name: secret-volume
      secret:
        secretName: "github-linz-{{=sprig.regexFind(inputs.parameters.repo, inputs.parameters.target)}}"
        defaultMode: 384
